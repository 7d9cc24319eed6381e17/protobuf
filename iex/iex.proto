syntax = "proto3";

package iex;
option go_package = "github.com/7d9cc24319eed6381e17/protobuf/iex";

// Search
message StockInfo {
    string symbol = 1;
    string securityName = 2;
    string securityType = 3;
    string region = 4;
    string exchange = 5;
}

message StockSearchRequest {
    string fragment = 1;
}

message StockSearchResponse {
    repeated StockInfo stockInfo = 1;
}

// Quotes
message StockQuoteRequest {
    string symbol = 1;
}

message StockQuoteResponse {
    string symbol = 1;
    float price = 2;
}

message StockQuoteRequestBatch {
    repeated StockQuoteRequest symbols = 1;
}

message StockQuoteResponseBatch {
    repeated StockQuoteResponse quotes = 1;
}

// NEWS
message StockNewsData {
    int64 datetime = 1;
    string headline = 2;
    string source = 3;
    string url = 4;
    string summary = 5;
    string related = 6;
    string image = 7;
    string lang = 8;
    bool hasPaywall = 9;
}

message StockNewsRequest {
    string symbol = 1;
}

// Default request contains 10 latest news
message StockNewsResponse {
    repeated StockNewsData news = 1;
}

// Return just latest
message StockNewsResponseLatest {
    StockNewsData news = 1;
}

service Iex {
    // Quotes
    rpc GetRealTimeStockQuote(StockQuoteRequest) returns (StockQuoteResponse) {};
    rpc GetRealTimeStockQuoteBatch(StockQuoteRequestBatch) returns (StockQuoteResponseBatch) {};

    // Search
    rpc FindStock(StockSearchRequest) returns (StockSearchResponse) {};

    // News
    rpc GetNews(StockNewsRequest) returns (StockNewsResponse) {};
    rpc GetNewsLatest(StockNewsRequest) returns (StockNewsResponseLatest) {};
}
